{"version":3,"sources":["../../src/core/validateMessages.tsx"],"sourcesContent":["import AbstractIntlMessages from './AbstractIntlMessages';\nimport IntlError, {IntlErrorCode} from './IntlError';\n\nfunction validateMessagesSegment(\n  messages: AbstractIntlMessages,\n  invalidKeyLabels: Array<string>,\n  parentPath?: string\n) {\n  Object.entries(messages).forEach(([key, messageOrMessages]) => {\n    if (key.includes('.')) {\n      let keyLabel = key;\n      if (parentPath) keyLabel += ` (at ${parentPath})`;\n      invalidKeyLabels.push(keyLabel);\n    }\n\n    if (messageOrMessages != null && typeof messageOrMessages === 'object') {\n      validateMessagesSegment(\n        messageOrMessages,\n        invalidKeyLabels,\n        [parentPath, key].filter((part) => part != null).join('.')\n      );\n    }\n  });\n}\n\nexport default function validateMessages(\n  messages: AbstractIntlMessages,\n  onError: (error: IntlError) => void\n) {\n  const invalidKeyLabels: Array<string> = [];\n  validateMessagesSegment(messages, invalidKeyLabels);\n\n  if (invalidKeyLabels.length > 0) {\n    onError(\n      new IntlError(\n        IntlErrorCode.INVALID_KEY,\n        process.env.NODE_ENV !== 'production'\n          ? `Namespace keys can not contain the character \".\" as this is used to express nesting. Please remove it or replace it with another character.\n\nInvalid ${\n              invalidKeyLabels.length === 1 ? 'key' : 'keys'\n            }: ${invalidKeyLabels.join(', ')}\n\nIf you're migrating from a flat structure, you can convert your messages as follows:\n\nimport {set} from \"lodash\";\n\nconst input = {\n  \"one.one\": \"1.1\",\n  \"one.two\": \"1.2\",\n  \"two.one.one\": \"2.1.1\"\n};\n\nconst output = Object.entries(input).reduce(\n  (acc, [key, value]) => set(acc, key, value),\n  {}\n);\n\n// Output:\n//\n// {\n//   \"one\": {\n//     \"one\": \"1.1\",\n//     \"two\": \"1.2\"\n//   },\n//   \"two\": {\n//     \"one\": {\n//       \"one\": \"2.1.1\"\n//     }\n//   }\n// }\n`\n          : undefined\n      )\n    );\n  }\n}\n"],"mappings":"AACA,OAAOA,GAAY,iBAAAC,MAAoB,cAEvC,SAASC,EACPC,EACAC,EACAC,EACA,CACA,OAAO,QAAQF,CAAQ,EAAE,QAAQ,CAAC,CAACG,EAAKC,CAAiB,IAAM,CAC7D,GAAID,EAAI,SAAS,GAAG,EAAG,CACrB,IAAIE,EAAWF,EACXD,IAAYG,GAAY,QAAQH,CAAU,KAC9CD,EAAiB,KAAKI,CAAQ,CAChC,CAEID,GAAqB,MAAQ,OAAOA,GAAsB,UAC5DL,EACEK,EACAH,EACA,CAACC,EAAYC,CAAG,EAAE,OAAQG,GAASA,GAAQ,IAAI,EAAE,KAAK,GAAG,CAC3D,CAEJ,CAAC,CACH,CAEe,SAARC,EACLP,EACAQ,EACA,CACA,MAAMP,EAAkC,CAAC,EACzCF,EAAwBC,EAAUC,CAAgB,EAE9CA,EAAiB,OAAS,GAC5BO,EACE,IAAIX,EACFC,EAAc,YACd,QAAQ,IAAI,WAAa,aACrB;AAAA;AAAA,UAGEG,EAAiB,SAAW,EAAI,MAAQ,MAC1C,KAAKA,EAAiB,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BhC,MACN,CACF,CAEJ","names":["IntlError","IntlErrorCode","validateMessagesSegment","messages","invalidKeyLabels","parentPath","key","messageOrMessages","keyLabel","part","validateMessages","onError"]}