{"version":3,"sources":["../../src/core/convertFormatsToIntlMessageFormat.tsx"],"sourcesContent":["import {Formats as IntlFormats} from 'intl-messageformat';\nimport DateTimeFormatOptions from './DateTimeFormatOptions';\nimport Formats from './Formats';\nimport TimeZone from './TimeZone';\n\nfunction setTimeZoneInFormats(\n  formats: Record<string, DateTimeFormatOptions> | undefined,\n  timeZone: TimeZone\n) {\n  if (!formats) return formats;\n\n  // The only way to set a time zone with `intl-messageformat` is to merge it into the formats\n  // https://github.com/formatjs/formatjs/blob/8256c5271505cf2606e48e3c97ecdd16ede4f1b5/packages/intl/src/message.ts#L15\n  return Object.keys(formats).reduce(\n    (acc: Record<string, DateTimeFormatOptions>, key) => {\n      acc[key] = {\n        timeZone,\n        ...formats[key]\n      };\n      return acc;\n    },\n    {}\n  );\n}\n\n/**\n * `intl-messageformat` uses separate keys for `date` and `time`, but there's\n * only one native API: `Intl.DateTimeFormat`. Additionally you might want to\n * include both a time and a date in a value, therefore the separation doesn't\n * seem so useful. We offer a single `dateTime` namespace instead, but we have\n * to convert the format before `intl-messageformat` can be used.\n */\nexport default function convertFormatsToIntlMessageFormat(\n  formats: Partial<Formats>,\n  timeZone?: TimeZone\n): Partial<IntlFormats> {\n  const formatsWithTimeZone = timeZone\n    ? {...formats, dateTime: setTimeZoneInFormats(formats.dateTime, timeZone)}\n    : formats;\n\n  return {\n    ...formatsWithTimeZone,\n    date: formatsWithTimeZone?.dateTime,\n    time: formatsWithTimeZone?.dateTime\n  };\n}\n"],"mappings":"AAKA,SAASA,EACPC,EACAC,EACA,CACA,OAAKD,GAIE,OAAO,KAAKA,CAAO,EAAE,OAC1B,CAACE,EAA4CC,KAC3CD,EAAIC,CAAG,EAAI,CACT,SAAAF,EACA,GAAGD,EAAQG,CAAG,CAChB,EACOD,GAET,CAAC,CACH,CACF,CASe,SAARE,EACLJ,EACAC,EACsB,CACtB,MAAMI,EAAsBJ,EACxB,CAAC,GAAGD,EAAS,SAAUD,EAAqBC,EAAQ,SAAUC,CAAQ,CAAC,EACvED,EAEJ,MAAO,CACL,GAAGK,EACH,KAAMA,GAAqB,SAC3B,KAAMA,GAAqB,QAC7B,CACF","names":["setTimeZoneInFormats","formats","timeZone","acc","key","convertFormatsToIntlMessageFormat","formatsWithTimeZone"]}