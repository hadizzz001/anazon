{"version":3,"sources":["../../../src/react/useNow.tsx"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport useIntlContext from './useIntlContext';\n\ntype Options = {\n  updateInterval?: number;\n};\n\nfunction getNow() {\n  return new Date();\n}\n\n/**\n * Reading the current date via `new Date()` in components should be avoided, as\n * it causes components to be impure and can lead to flaky tests. Instead, this\n * hook can be used.\n *\n * By default, it returns the time when the component mounts. If `updateInterval`\n * is specified, the value will be updated based on the interval.\n *\n * You can however also return a static value from this hook, if you\n * configure the `now` parameter on the context provider. Note however,\n * that if `updateInterval` is configured in this case, the component\n * will initialize with the global value, but will afterwards update\n * continuously based on the interval.\n *\n * For unit tests, this can be mocked to a constant value. For end-to-end\n * testing, an environment parameter can be passed to the `now` parameter\n * of the provider to mock this to a static value.\n */\nexport default function useNow(options?: Options) {\n  const updateInterval = options?.updateInterval;\n\n  const {now: globalNow} = useIntlContext();\n  const [now, setNow] = useState(globalNow || getNow());\n\n  useEffect(() => {\n    if (!updateInterval) return;\n\n    const intervalId = setInterval(() => {\n      setNow(getNow());\n    }, updateInterval);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [globalNow, updateInterval]);\n\n  return now;\n}\n"],"mappings":"AAAA,OAAQ,YAAAA,EAAU,aAAAC,MAAgB,QAClC,OAAOC,MAAoB,mBAM3B,SAASC,GAAS,CAChB,OAAO,IAAI,IACb,CAoBe,SAARC,EAAwBC,EAAmB,CAChD,MAAMC,EAAiBD,GAAS,eAE1B,CAAC,IAAKE,CAAS,EAAIL,EAAe,EAClC,CAACM,EAAKC,CAAM,EAAIT,EAASO,GAAaJ,EAAO,CAAC,EAEpD,OAAAF,EAAU,IAAM,CACd,GAAI,CAACK,EAAgB,OAErB,MAAMI,EAAa,YAAY,IAAM,CACnCD,EAAON,EAAO,CAAC,CACjB,EAAGG,CAAc,EAEjB,MAAO,IAAM,CACX,cAAcI,CAAU,CAC1B,CACF,EAAG,CAACH,EAAWD,CAAc,CAAC,EAEvBE,CACT","names":["useState","useEffect","useIntlContext","getNow","useNow","options","updateInterval","globalNow","now","setNow","intervalId"]}