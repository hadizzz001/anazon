import { Formats as Formats$1 } from 'intl-messageformat';
import Formats from './Formats.js';
import TimeZone from './TimeZone.js';
import './DateTimeFormatOptions.js';
import '@formatjs/ecma402-abstract/types/number';

/**
 * `intl-messageformat` uses separate keys for `date` and `time`, but there's
 * only one native API: `Intl.DateTimeFormat`. Additionally you might want to
 * include both a time and a date in a value, therefore the separation doesn't
 * seem so useful. We offer a single `dateTime` namespace instead, but we have
 * to convert the format before `intl-messageformat` can be used.
 */
declare function convertFormatsToIntlMessageFormat(formats: Partial<Formats>, timeZone?: TimeZone): Partial<Formats$1>;

export { convertFormatsToIntlMessageFormat as default };
