import { extends as _extends } from '../_virtual/next-intl.esm.js';
import { useRouter as useRouter$1 } from 'next/navigation';
import { useMemo } from 'react';
import { localizeHref } from '../shared/next-intl.esm2.js';
import useClientLocale from './next-intl.esm2.js';

/**
 * Returns a wrapped instance of `useRouter` from `next/navigation` that
 * will automatically localize the `href` parameters it receives.
 *
 * @example
 * ```tsx
 * 'use client';
 *
 * import {useRouter} from 'next-intl/client';
 *
 * const router = useRouter();
 *
 * // When the user is on `/en`, the router will navigate to `/en/about`
 * router.push('/about');
 * ```
 */
function useRouter() {
  var router = useRouter$1();
  var locale = useClientLocale();
  return useMemo(function () {
    function localize(href) {
      return localizeHref(href, locale, locale, window.location.pathname);
    }
    return _extends({}, router, {
      push: function push(href) {
        return router.push(localize(href));
      },
      replace: function replace(href) {
        return router.replace(localize(href));
      },
      prefetch: function prefetch(href) {
        return router.prefetch(localize(href));
      }
    });
  }, [locale, router]);
}

export { useRouter as default };
//# sourceMappingURL=next-intl.esm.js.map
